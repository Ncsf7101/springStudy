<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--        1.导入spring的坐标spring-context，对应版本是5.2.10.RELEASE-->
<!--        2.配置bean-->
<!--            bean标签表示配置bean-->
<!--            id属性表示给bean起名字-->
<!--            class属性表示被bean定义类型-->

     <bean id="bookDao" class="com.rqiang.dao.impl.BooskDaoImpl" scope="prototype"/>
<!--        别名: <bean name="book1, book2; dao service"/>-->
<!--    spring bean 默认配置Single单例的bean对象，可以通过输出对象地址验证-->
<!--    默认为单例，可以通过修改bean配置属性更改为非单例 scope="singleton|prototype-->
<!--    如果关系绑定，不管绑定关系是什么作用范围都以IOC取出的对象Scope为准，如：bean为prototype，bookService为singleton，取出对象为singleton-->
     <bean id="bookService" name="book1, book2; dao service" class="com.rqiang.service.impl.BookServiceImpl">
<!--          7.配置service与dao的关系-->
<!--          property标签表示配置当前bean的属性-->
<!--          name属性表示配置哪一个具体的属性，即set+name的name方法名-->
<!--          ref属性表示参照哪一个bean-->
          <property name="bookDao"  ref="bookDao"/>  <!--DI绑定关系-->
     </bean>

</beans>

<!--适合交给IOC容器管理的bean-->
<!--    表现层对象-->
<!--    业务层对象-->
<!--    数据从对象-->
<!--    工具对象-->
<!--不适合交给IOC容器管理的bean-->
<!--    封装实体的域对象-->